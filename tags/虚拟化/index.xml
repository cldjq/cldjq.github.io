<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>虚拟化 on 承离的觉前</title>
    <link>https://tinklespring.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/</link>
    <description>Recent content in 虚拟化 on 承离的觉前</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 24 May 2023 09:25:07 +0800</lastBuildDate>
    
        <atom:link href="https://tinklespring.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ssh密钥类型选择</title>
      <link>https://tinklespring.com/posts/ssh%E5%AF%86%E9%92%A5%E7%B1%BB%E5%9E%8B%E9%80%89%E6%8B%A9/</link>
      <pubDate>Thu, 25 May 2023 13:37:48 +0800</pubDate>
      
      <guid>https://tinklespring.com/posts/ssh%E5%AF%86%E9%92%A5%E7%B1%BB%E5%9E%8B%E9%80%89%E6%8B%A9/</guid>
      <description>&lt;p&gt;As everyone knows，ssh key can improve ssh connection security.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RSA（Rivest–Shamir–Adleman）是最早的公钥密码系统之一，被广泛用于安全数据传输。它的安全性取决于整数分解，因此永远不需要安全的RNG（随机数生成器）。与DSA相比，RSA的签名验证速度更快，但生成速度较慢。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DSA（数字签名算法）是用于数字签名的联邦信息处理标准。它的安全性取决于离散的对数问题。与RSA相比，DSA的签名生成速度更快，但验证速度较慢。如果使用错误的数字生成器，可能会破坏安全性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ECDSA（椭圆曲线数字签名算法）是DSA（数字签名算法）的椭圆曲线实现。椭圆曲线密码术能够以较小的密钥提供与RSA相对相同的安全级别。它还具有DSA对不良RNG敏感的缺点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EdDSA（爱德华兹曲线数字签名算法）是一种使用基于扭曲爱德华兹曲线的Schnorr签名变体的数字签名方案。签名创建在EdDSA中是确定性的，其安全性是基于某些离散对数问题的难处理性，因此它比DSA和ECDSA更安全，后者要求每个签名都具有高质量的随机性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ed25519是EdDSA签名方案，但使用SHA-512 / 256和Curve25519；它是一条安全的椭圆形曲线，比DSA，ECDSA和EdDSA 提供更好的安全性，并且具有更好的性能（人为注意）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ssh key的类型有四种，分别是dsa、rsa、 ecdsa、ed25519。&lt;/p&gt;
&lt;p&gt;根据数学特性，这四种类型又可以分为两大类，dsa/rsa是一类，ecdsa/ed25519是一类，后者算法更先进。&lt;/p&gt;
&lt;p&gt;dsa因为安全问题，已不再使用了。&lt;/p&gt;
&lt;p&gt;ecdsa因为政治原因和技术原因，也不推荐使用。&lt;/p&gt;
&lt;p&gt;rsa是目前兼容性最好的，应用最广泛的key类型，在用ssh-keygen工具生成key的时候，默认使用的也是这种类型。不过在生成key时，如果指定的key size太小的话，也是有安全问题的，推荐key size是3072或更大。&lt;/p&gt;
&lt;p&gt;ed25519是目前最安全、加解密速度最快的key类型，由于其数学特性，它的key的长度比rsa小很多，优先推荐使用。它目前唯一的问题就是兼容性，即在旧版本的ssh工具集中可能无法使用。&lt;/p&gt;
&lt;h2 id=&#34;综合来看优先选择ed25519&#34;&gt;综合来看，优先选择ed25519&lt;/h2&gt;
&lt;p&gt;下面来简介下如何生成&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh-keygen -t ed25519 -C &amp;#34;yourname&amp;#34;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Proxmox高可用集群</title>
      <link>https://tinklespring.com/posts/proxmox%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Wed, 24 May 2023 09:25:07 +0800</pubDate>
      
      <guid>https://tinklespring.com/posts/proxmox%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;接上文proxmox安装～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;安装集群顺序&#34;&gt;安装集群顺序&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;安装proxmox&lt;/li&gt;
&lt;li&gt;创建并加入集群&lt;/li&gt;
&lt;li&gt;创建&lt;code&gt;pveceph&lt;/code&gt;分布式存储&lt;/li&gt;
&lt;li&gt;创建高可用&lt;/li&gt;
&lt;li&gt;创建虚拟机并测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;创建bond网络&#34;&gt;创建Bond网络&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;创建bond，&amp;ldquo;slaves&amp;rdquo; 选择需要做bond的网卡名字，以空格区分&lt;/li&gt;
&lt;li&gt;创建Linux Bridge，桥接端口选择bond网卡名字&lt;/li&gt;
&lt;li&gt;若需要虚拟机网络隔离，则需要继续创建 Linux Vlan&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;安装pveceph&#34;&gt;安装pveceph&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;所有节点执行 &lt;code&gt;pveceph install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;任意一个节点执行初始化pveceph存储网络 &lt;code&gt;pveceph init --network 10.255.255.0/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;至少需要三个节点执行，创建ceph监视器 &lt;code&gt;pveceph createmon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建ceph osd:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;选择物理节点&lt;/li&gt;
&lt;li&gt;ceph &amp;ndash;&amp;gt; osd&lt;/li&gt;
&lt;li&gt;点击创建，每次只能加一个&lt;/li&gt;
&lt;li&gt;多个节点则依次排着添加&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;创建 &lt;code&gt;ceph osd crush rule&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ceph osd crush rule create-replicated rule-ssd default  host ssd
ceph osd crush rule create-replicated rule-hdd default  host hdd
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;查看：&lt;code&gt;ceph osd crush rule ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建ceph pools
&lt;code&gt;of_PGs&lt;/code&gt; 官方建议：少于5个osd，值为128；5-10个，值为512；10-50个，值为4096；&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;这里没找到具体实际的，设置4096貌似报错了～
&lt;code&gt;crush rule&lt;/code&gt;根据osd类型选择对应的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;创建高可用组&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;选择 &amp;lsquo;数据中心&amp;rsquo;&lt;/li&gt;
&lt;li&gt;选择 &amp;lsquo;HA&amp;rsquo; &amp;ndash;&amp;gt; &amp;lsquo;群组&amp;rsquo;&lt;/li&gt;
&lt;li&gt;选择创建，将所需节点添加&lt;/li&gt;
&lt;li&gt;选择 &amp;lsquo;HA&amp;rsquo; &amp;ndash;&amp;gt; &amp;lsquo;资源&amp;rsquo;&lt;/li&gt;
&lt;li&gt;选择添加，将需要的vm加入即可，请求状态为 started&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时，即可使 vm 成为高可用，当宿主机宕机后，vm会漂移至其他节点。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>K3s初体验</title>
      <link>https://tinklespring.com/posts/k3s%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Tue, 23 May 2023 14:13:37 +0800</pubDate>
      
      <guid>https://tinklespring.com/posts/k3s%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文使用离线安装方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.下载k3s 二进制程序与images &lt;code&gt;https://github.com/k3s-io/k3s/releases&lt;/code&gt;&lt;br&gt;
2.下载安装脚本 &lt;code&gt;https://get.k3s.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将tar 文件放到下边这个目录内。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir -p /var/lib/rancher/k3s/agent/images/
cp ./k3s-airgap-images-$ARCH.tar /var/lib/rancher/k3s/agent/images/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行脚本
&lt;code&gt;INSTALL_K3S_SKIP_DOWNLOAD=true ./install.sh&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[INFO]  Skipping k3s download and verify
[INFO]  Skipping installation of SELinux RPM
[INFO]  Creating /usr/local/bin/kubectl symlink to k3s
[INFO]  Creating /usr/local/bin/crictl symlink to k3s
[INFO]  Creating /usr/local/bin/ctr symlink to k3s
[INFO]  Creating killall script /usr/local/bin/k3s-killall.sh
[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh
[INFO]  env: Creating environment file /etc/systemd/system/k3s.service.env
[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service
[INFO]  systemd: Enabling k3s unit
Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.
[INFO]  systemd: Starting k3s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至此单节点安装完成。只部署server 端，即可拥有全部功能。&lt;/p&gt;
&lt;p&gt;扩展增加agent节点：&lt;br&gt;
获取token:&lt;br&gt;
&lt;code&gt;cat /var/lib/rancher/k3s/server/token&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;SERVER_IP&lt;/code&gt;与token换成对应的，执行如下命令添加agent节点&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSTALL_K3S_SKIP_DOWNLOAD=true K3S_URL=https://&amp;lt;SERVER_IP&amp;gt;:6443 K3S_TOKEN=&amp;lt;YOUR_TOKEN&amp;gt; ./install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;升级：&lt;br&gt;
升级也比较简单，只需将新版本images与k3s二进制程序替换，重新执行安装脚本即可&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proxmox安装</title>
      <link>https://tinklespring.com/posts/proxmox%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 23 May 2023 10:24:44 +0800</pubDate>
      
      <guid>https://tinklespring.com/posts/proxmox%E5%AE%89%E8%A3%85/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文使用非系统镜像模式安装&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;安装debian系统&#34;&gt;安装debian系统&lt;/h1&gt;
&lt;h1 id=&#34;配置debian网卡&#34;&gt;配置debian网卡&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;服务器需要使用两个网口，一个access，一个trunk，这里使用access 口，trunk 口给Linux Bridge使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;auto ens3
iface ens3 inet static
address 192.168.100.80
netmask 255.255.255.0
gateway 192.168.100.254
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;安装proxmox&#34;&gt;安装proxmox&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;将主机名写入hosts文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;10.20.0.10    pve-00&amp;#34; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;配置debian11-apt源&#34;&gt;配置debian11 apt源&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat &amp;gt; /etc/apt/sources.list &amp;lt;&amp;lt; EOF
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;添加pve源&#34;&gt;添加pve源&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;echo &amp;quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bullseye pve-no-subscription&amp;quot; &amp;gt; /etc/apt/sources.list.d/pve-install-repo.list&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;添加pve-存储库密钥&#34;&gt;添加pve 存储库密钥&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;wget https://enterprise.proxmox.com/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;更新系统&#34;&gt;更新系统&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;apt update &amp;amp;&amp;amp; apt upgrade&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装proxmox-1&#34;&gt;安装proxmox&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;apt install proxmox-ve postfix open-iscsi&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;删除os-prober&#34;&gt;删除os-prober&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;apt remove os-prober linux-image-amd64&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;去除订阅提示&#34;&gt;去除订阅提示&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;更改 /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js 文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Ext.Msg.show({
title: gettext(&amp;#39;No valid subscription&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;更改为&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;void({
title: gettext(&amp;#39;No valid subscription&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;配置网络&#34;&gt;配置网络&lt;/h1&gt;
&lt;p&gt;1.选择网络&lt;br&gt;
2.创建 -&amp;gt; Linux Bridge&lt;br&gt;
名称：vmbr0&lt;br&gt;
自动启动：✅&lt;br&gt;
VLAN感知：✅&lt;br&gt;
桥接端口：选择上述从交换机trunk口接的网卡名称&lt;br&gt;
3.再次创建 -&amp;gt; Linux VLAN&lt;br&gt;
名称：vmbr0.2000&lt;br&gt;
IPv4/CIDR：x.x.x.x/24&lt;br&gt;
网关(IPv4)：VLAN tag 2000的网关地址&lt;br&gt;
自动启动：✅&lt;br&gt;
4.点击应用配置使网卡配置生效&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，这里的2000是VLAN的tag号,此种方式，可以实现不同的vm在不同的vlan里，方便进行网络层面的管控&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;添加存储&#34;&gt;添加存储&lt;/h1&gt;
&lt;p&gt;1.选择 数据中心&lt;br&gt;
2.选择 存储&lt;br&gt;
3.选择 添加 目录&lt;br&gt;
这里使用本机的存储，也可使用其他类型，根据实际情况选择即可&lt;/p&gt;
&lt;h1 id=&#34;添加集群&#34;&gt;添加集群&lt;/h1&gt;
&lt;p&gt;创建名为pve-cluster名字的pve集群&lt;br&gt;
&lt;code&gt;pvecm create pve-cluster&lt;/code&gt;&lt;br&gt;
在需要加入集群的节点上执行&lt;br&gt;
&lt;code&gt;pvecm add x.x.x.x&lt;/code&gt;&lt;br&gt;
只能允许没有虚拟机的节点才能加入集群，需要注意&lt;/p&gt;
&lt;h1 id=&#34;查看状态&#34;&gt;查看状态&lt;/h1&gt;
&lt;p&gt;查看集群状态：&lt;code&gt;pvecm status&lt;/code&gt;&lt;br&gt;
查看集群节点：&lt;code&gt;pvecm nodes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;至此，安装完成&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://tinklespring.com/about/</link>
      <pubDate>Mon, 22 May 2023 18:33:06 +0800</pubDate>
      
      <guid>https://tinklespring.com/about/</guid>
      <description>&lt;p&gt;Super man!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rsync&#43;inotify数据实时同步</title>
      <link>https://tinklespring.com/posts/rsync&#43;inotify%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Mon, 22 May 2023 16:51:53 +0800</pubDate>
      
      <guid>https://tinklespring.com/posts/rsync&#43;inotify%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;不啰嗦,不介绍rsync用法,直接实现使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;rsyncdconf配置&#34;&gt;rsyncd.conf配置&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# vim /etc/rsyncd.conf
port=873
log file=/var/log/rsync.log
pid file=/var/run/rsyncd.pid
[test]
path=/home/test_server
use chroot=true
max connections=4
read only=no
list=false
uid=root
gid=root
auth users=test
secrets file=/etc/rsync.pass
hosts allow=192.168.0.31
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;auth users 与系统用户没有任何关系,只在这里指定使用.
secrets file 是auth users这个用户的信息,内容格式 : &lt;code&gt;test:123456&lt;/code&gt;,为了安全,将此文件更改为600的权限.&lt;/p&gt;
&lt;h4 id=&#34;启动&#34;&gt;启动&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# rsync --daemon
# ss -lntp |grep rsync
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以查看到rsync服务的873的端口&lt;/p&gt;
&lt;h3 id=&#34;安装inotify-tools&#34;&gt;安装inotify-tools&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# wget http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz
# yum install –y gcc
# mkdir /usr/local/inotify
# tar -xzf inotify-tools-3.14.tar.gz
# cd inotify-tools-3.14
# ./configure --prefix=/usr/local/inotify/
# make &amp;amp;&amp;amp; make install
# echo &amp;#39;export PATH=/usr/local/inotify/bin/:$PATH&amp;#39; &amp;gt;&amp;gt; /etc/profile
# . /etc/profile
# echo &amp;#39;/usr/local/inotify/lib&amp;#39; &amp;gt;&amp;gt; /etc/ld.so.conf --加载库文件
# ldconfig
# ln -s /usr/local/inotify/include /usr/include/inotify
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;常用参数&#34;&gt;常用参数&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-m —始终保持监听状态，默认触发事件即退出
-r —递归查询目录
-q —打印出监控事件
-e —定义监控的事件，可用参数：
access —访问文件
modify —修改文件
attrib —属性变更
open —打开文件
delete —删除文件
create —新建文件
move —文件移动
—fromfile —从文件读取需要监视的文件或者排除的文件，一个文件一行，排除的文件以@开头
—timefmt —时间格式
—format —输出格式
—exclude —正则匹配需要排除的文件，大小写敏感
—excludei —正则匹配需要排除的文件，忽略大小写
%y%m%d %H%M —年月日时钟
%T%w%f%e —时间路径文件名状态
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;查看系统是否支持&#34;&gt;查看系统是否支持&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;ll /proc/sys/fs/inotify&lt;/code&gt;命令，是否有以下三条信息输出，如果没有表示不支持。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-rw-r--r-- 1 root root 0 Dec 11 15:23 max_queued_events
-rw-r--r-- 1 root root 0 Dec 11 15:23 max_user_instances
-rw-r--r-- 1 root root 0 Dec 11 15:23 max_user_watches
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;max_queued_events&lt;/code&gt;表示调用inotify_init时分配给inotify instance中可排队的event的数目的最大值，超出这个值的事件被丢弃，但会触发IN_Q_OVERFLOW事件。
&lt;code&gt;/proc/sys/fs/inotify/max_user_instances&lt;/code&gt;表示每一个real user ID可创建的inotify instatnces的数量上限。
&lt;code&gt;/proc/sys/fs/inotify/max_user_watches&lt;/code&gt;表示每个inotify instatnces可监控的最大目录数量。如果监控的文件数目巨大，需要根据情况，适当增加此值的大小。&lt;/p&gt;
&lt;h3 id=&#34;编辑同步脚本&#34;&gt;编辑同步脚本&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/bin/bash
/usr/local/inotify/bin/inotifywait -mrq -e modify,create,move,delete,attrib /home/test31/test31 | while read events
do
rsync -a --bwlimit=200 /home/test31/test31 test@192.168.0.30::test --password-file=/home/password.txt
echo &amp;#34;`date +&amp;#39;%F %T&amp;#39;` 出现事件：$events&amp;#34; &amp;gt;&amp;gt; /tmp/rsync.log 2&amp;gt;&amp;amp;1
done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;--password-file&lt;/code&gt;这个参数用来写auth users的密码,权限也改为600
&lt;code&gt;--bwlimit=200&lt;/code&gt;这个参数限制传输速率为200kb,若不限制,会导致巨大的CPU消耗.&lt;/p&gt;
&lt;p&gt;当然,也可以在目标机器上也写一个这样的脚本,用来实现双向同步&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>